name: Check

on:
  pull_request:
    branches: [ main ]

jobs:
  syntax-check:
    name: ‚úÖ Syntax Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install \
            FreeSimpleGUI \
            numpy \
            requests \
            pytz \
            opencv-contrib-python \
            opencv-python \
            pillow

      - name: Check for syntax errors
        run: python -m compileall .

  ruff-check:
    name: ü¶ä Ruff Check & Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Ruff
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run Ruff lint (with auto-fix)
        run: ruff check . --fix

      - name: Format with Ruff (optional if replacing Black)
        run: ruff format .

  spell-check:
    name: üî§ Spell Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run codespell
        uses: codespell-project/actions-codespell@v2
        with:
          check_filenames: true
          skip: .git,venv,__pycache__,*.svg
          ignore_words_list: "teh,func,ign,nd,OT"

  sonarcloud:
    name: üìä SonarCloud Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install project dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install \
            FreeSimpleGUI \
            numpy \
            requests \
            pytz \
            opencv-contrib-python \
            opencv-python \
            pillow

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=MFerretti27_Scoreboard
            -Dsonar.organization=mferretti27
            -Dsonar.coverage.exclusions=**
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  pr-description-check:
    name: üìù PR Description Required
    runs-on: ubuntu-latest

    steps:
      - name: Check PR description
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.payload.pull_request.number,
            });

            const body = pr.data.body || "";

            if (body.trim().length < 10) {
              core.setFailed("‚ùå PR description is required and must be at least 10 characters long.");
            } else {
              console.log("‚úÖ PR description is present.");
            }

  type-check:
    name: üîé Type Checking
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install mypy and dependencies
        run: |
          python -m pip install --upgrade pip
          pip3 install \
            FreeSimpleGUI \
            numpy \
            requests \
            pytz \
            opencv-contrib-python \
            opencv-python \
            pillow

      - name: Run mypy
        run: |
          pip3 install numpy
          mypy .